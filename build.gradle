import groovy.xml.Namespace;

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url= "http://nexus.gking2224.me/nexus/content/repositories/releases" }
        maven { url= "http://nexus.gking2224.me/nexus/content/repositories/snapshots" }
		maven { url "https://plugins.gradle.org/m2/" }
//        maven.url "http://repo.spring.io/milestone"
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
//        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.4.0"
        classpath "me.gking2224:BuildToolsGradlePlugin:0.2.7"
        classpath "me.gking2224:AmazonAWSGradlePlugin:0.1.16-SNAPSHOT"
        classpath "me.gking2224:DockerPlugin:0.0.+"
        classpath "me.gking2224:DatabaseBuildGradlePlugin:0.1.+"
        classpath "me.gking2224:WebAppBuildGradlePlugin:0.0.+"
        classpath "me.gking2224:MicroServicesGradlePlugin:0.0.25"
        classpath "mysql:mysql-connector-java:5.1.39"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}
plugins {
  id "groovy"
  id 'net.saliman.cobertura' version '2.3.2'
}

ext {
    buildToolsVersion = "0.2.7"
    springVersion = "4.3.1.RELEASE"
    springDataVersion = "1.10.2.RELEASE"
    springBootVersion = "1.4.1.RELEASE"
    springJmsVersion = "4.3.3.RELEASE"
    springSecurityVersion = "4.1.3.RELEASE"
    jacksonVersion = "2.8.0"
    freemarkerVersion = "2.3.23"
    slf4jVersion = "1.7.21"
    hibernateVersion = "5.2.1.Final"
    mysqlVersion = "5.1.39"
    logbackVersion = "1.1.1"
}
jar {
    baseName = 'securityms'
    version =  project.version
}

apply from: 'database.gradle'
apply from: 'environments.gradle'

apply plugin: 'me.gking2224.buildtools'
apply plugin: 'me.gking2224.awsplugin'
apply plugin: 'me.gking2224.dockerplugin'
apply plugin: 'me.gking2224.databasebuild'
apply plugin: 'me.gking2224.webappbuild'
apply plugin: 'me.gking2224.msplugin'
apply plugin: 'docker'



apply plugin: 'spring-boot'
springBoot {
    executable = true
    mainClass = 'me.gking2224.securityms.SecurityServiceApplication'
}
bootRun {
    jvmArgs "-Xdebug"
    jvmArgs "-Xrunjdwp:server=y,transport=dt_socket,suspend=n,address="+project.envProps['build.jdwpPort']
    jvmArgs "-Dorg.jboss.logging.provider=slf4j"
    args = ["-a", "batch", "web", "-e", "local"]
//    args = ["--spring.profiles.active=jmx,web,batch,"+project.env, "--debug"]
}
bootRepackage {
    mainClass = 'me.gking2224.securityms.SecurityServiceApplication'
    classifier = "boot"
    withJarTask = jar
    
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
    maven { url= "http://nexus.gking2224.me/nexus/content/repositories/releases" }
    maven { url= "http://nexus.gking2224.me/nexus/content/repositories/snapshots" }
}

integrationTest.outputs.upToDateWhen { false }

prepareEnvConfigFiles.outputs.upToDateWhen { false }
dependencies {
    // BUILD
    compile localGroovy()
    compile("org.springframework.boot:spring-boot-devtools")

    
    // LOGGING
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    runtime "ch.qos.logback:logback-core:${logbackVersion}"
    runtime "ch.qos.logback:logback-classic:${logbackVersion}"
    runtime "ch.qos.logback:logback-access:${logbackVersion}"
    runtime "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    runtime "org.slf4j:jul-to-slf4j:$slf4jVersion"
    
    // SPRING BOOT
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-aop:$springBootVersion")
    compile("org.springframework.boot:spring-boot:$springBootVersion")
    
    
    // SECURITY
    compile("org.springframework.security:spring-security-core:$springSecurityVersion")
    compile("org.springframework.security:spring-security-config:$springSecurityVersion")
    compile("org.springframework.security:spring-security-web:$springSecurityVersion")
    compile("org.springframework.security:spring-security-crypto:$springSecurityVersion")
    
    // SPRING FRAMEWORK
    compile("org.springframework:spring-core:$springVersion")
    
    
    // AOP
    compile("org.springframework:spring-aop:${springVersion}")
    compile("org.aspectj:aspectjrt:1.6.11")
    compile("org.aspectj:aspectjweaver:1.6.11")


    
    // MVC
    compile("org.springframework:spring-context-support:$springVersion")
    compile("org.springframework:spring-web:$springVersion")
    compile("org.springframework:spring-webmvc:$springVersion")
    compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    compile("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jacksonVersion")
    compile group: 'org.apache.velocity', name: 'velocity', version: '1.7'
    compile(group: 'org.freemarker', name: 'freemarker', version:"$freemarkerVersion")
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.2.0'
    
    

    // DATABASE
    compile("org.springframework.data:spring-data-jpa:$springDataVersion")
    compile("org.springframework:spring-jdbc:$springVersion")
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.hibernate:hibernate-core:$hibernateVersion"
    compile ('org.apache.commons:commons-dbcp2:2.1.1')
    runtime("mysql:mysql-connector-java:$mysqlVersion")
    runtime "mysql:mysql-connector-mxj:5.0.12"
    
    
    // MESSAGING
    compile group: 'org.springframework', name: 'spring-jms', version: springJmsVersion
//    compile("org.apache.activemq:activemq-core:5.7.0")
    
    
    // UTILS
    compile group: 'org.aspectj', name: 'aspectjtools', version: '1.6.2'
    compile group: "me.gking2224", name: "gk-utils", version: "0.0.+"
    compile("me.gking2224:gk-microservice-utils:0.0.9")
    
    
    // TESTING
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "pl.pragmatists:JUnitParams:1.0.5"
    testCompile "org.jmock:jmock-junit4:2.8.2"
    
    
    // RUNTIME
    compile "org.apache.tomcat:tomcat-catalina:8.5.5"
    compile group: 'javax.security.auth.message', name: 'javax.security.auth.message-api', version: '1.1'
}
cobertura {
    coverageDirs << file("build/integration-classes")
}

configurations.compile {
    exclude group: "org.slf4j", module: "slf4j-log4j12"
    exclude group: "log4j", module: "log4j"
    exclude group: "commons-logging", module:"commons-logging"
    exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
}
/*
applicationDefaultJvmArgs = [
    "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"
]
*/

configurations {
  published
}

awsplugin {
    region = "eu-west-1"
//    profileName = "build"
}

project.sourceSets {
    clientlib {
        java {
            include 'me/gking2224/securityms/common/**'
        }
    }
}
dependencies {
    clientlib "org.springframework.security:spring-security-core:$springSecurityVersion"
    clientlib "org.springframework.security:spring-security-core:$springSecurityVersion"
    clientlib("org.springframework.security:spring-security-web:$springSecurityVersion")
    clientlib("org.springframework.security:spring-security-config:$springSecurityVersion")
    clientlib("org.springframework:spring-jms:$springJmsVersion")
    clientlib "org.springframework:spring-web:$springVersion"
    clientlib("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    clientlib group: "me.gking2224", name: "gk-microservice-utils", classifier: "client", version: "0.0.9"
    clientlib("org.apache.activemq:activemq-core:5.7.0")
    clientlib("org.springframework.boot:spring-boot:$springBootVersion")
}

clientlib {
    manifest {
        attributes 'Main-Class': 'me.gking2224.securityms.client.SecurityServiceClient'
    }
}

task getDevInstances(type: me.gking2224.awsplugin.task.ec2.GetInstances) {
    env = "dev"
    version = ["current", "next", "previous"]
    service = "securityms"
}

task getDevTargetGroups(type: me.gking2224.awsplugin.task.elb.GetTargetGroups) {
    env = "dev"
    version = ["current", "next", "previous"]
    service = "securityms"
}

task moveNextDevToCurrent(type: me.gking2224.awsplugin.task.elb.ReRouteInstances, dependsOn:[getDevInstances, getDevTargetGroups])
moveNextDevToCurrent.doFirst {
    
    instanceIds = getDevInstances.instances.next?.collect {it.instanceId}
    fromTargetGroupArn = getDevTargetGroups.targetGroups.next?.targetGroupArn
    toTargetGroupArn = getDevTargetGroups.targetGroups.current?.targetGroupArn
    newVersionTag = "current"
}

task moveCurrentDevToPrevious(type: me.gking2224.awsplugin.task.elb.ReRouteInstances, dependsOn:[moveNextDevToCurrent])
moveCurrentDevToPrevious.doFirst {
    
    instanceIds = getDevInstances.instances.current?.collect {it.instanceId}
    fromTargetGroupArn = getDevTargetGroups.targetGroups.current?.targetGroupArn
    toTargetGroupArn = getDevTargetGroups.targetGroups.previous?.targetGroupArn
    newVersionTag = "previous"
}

task deRegisterPreviousDev(type: me.gking2224.awsplugin.task.elb.ReRouteInstances, dependsOn:[moveCurrentDevToPrevious])
deRegisterPreviousDev.doFirst {
    
    instanceIds = getDevInstances.instances.previous?.collect {it.instanceId}
    fromTargetGroupArn = getDevTargetGroups.targetGroups.previous?.targetGroupArn
    toTargetGroupArn = null
    newVersionTag = ""
}

task promoteNext(dependsOn: deRegisterPreviousDev)
